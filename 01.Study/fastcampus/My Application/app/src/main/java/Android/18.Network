
네트워크
    -> 통신

    Database <---> Server <---> Client(app, web, ...)
        글                           A
        댓글                         B
    Local DataBase의 한계
        - 동기화가 어렵다
        - 상호작용이 불가능 하다
        -

    서버와 통신하는 방법
        - 해당 URL로 요청
        - 인증정보를 보낸다
        - JSON 형식을 사용해서 data를 보낸다
        - JSON란?
            ->JavaScript Object Notation -> Javascript에서 객체를 만들 때 사용하는 표현식 이다

        JSON 형식
        - [] -> List
        - {} -> 객체
            -> "" -> 문자열
            -> ""없으면 -> 숫자

        Json Response
        [
            {
                "id": 1,                -> 문서에 써있다
                "name": "홍길동",
                "age": 20,
                "intro": "나는 홍길동이다!"
            },
            {
                "id": 2,
                "name": "김아무개",
                "age": 10,
                "intro": "난 김아무개 입니다 :)"
            }
        ]

        Json Parsing
        -> Json을 코틀린이나 자바가 이해할수 있게 변형 하는 과정

        Serializable (직렬화)
        ----------------------->
          id, name, age, intro

        코틀린이나/ 자바가 이해할수 있는 틀

        class Person(
            var id : Int? = null
            var name : String? = null
            var age : Int? = null
            var intro : String? = null
        )

        Person(1,"김아무개", 20, "안녕하세요")


        Request Type                Status Code
        - GET    -> 정보 요청       -> 200 OK
        - POST   -> 정보 추가 요청   -> 201 Created
        - DELETE -> 정보 삭제 요청
        - PUT    -> 정보 수정 요청

//https://developer.mozilla.org/ko/docs/Web/HTTP/Status 참고
        Status Code
        - 200번대 -> 처리가 잘 됬다

Library
    - Volly     // 구글 정식 디벨로퍼
    - Retrofit  //



